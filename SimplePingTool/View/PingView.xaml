<UserControl x:Class="ITBox.View.PingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ITBox.View"
             xmlns:converter="clr-namespace:ITBox.Converters"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf" 
             mc:Ignorable="d"
             Background="{StaticResource BackgroundGrey}" d:DesignHeight="510" d:DesignWidth="700">

    <UserControl.Resources>

        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FF3B3434"/>
        <SolidColorBrush x:Key="Button.Static.MouseOver" Color="#FF5F5959"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource ControlBG_Red1}"/>
        <SolidColorBrush x:Key="Button.Disabled.MouseOver" Color="#FFE9776F"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        
        <Style x:Key="PingButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="20,5,20,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" CornerRadius="5" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.MouseOver}"/>
                                <Setter Property="Command" Value="{Binding StartPingCommand}"/>
                                <Setter Property="Content" Value="Stop"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Static.MouseOver}"/>
                                <Setter Property="Command" Value="{Binding StopPingCommand}"/>
                                <Setter Property="Content" Value="Start"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="Content" Value="Start"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Content" Value="Stop"/>
                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Background="{StaticResource BackgroundGrey}">
        <Grid.RowDefinitions>
            <RowDefinition Height="43*"/>
            <RowDefinition Height="51*"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>


        <!--#region CONTROLS -->

        <Grid x:Name="grdControls" Grid.Row="0" Grid.Column="0" Margin="5,5,5,5" 
              Visibility="{Binding ShowControlConfiguration, 
            Converter={StaticResource BooleanToVisibilityConverter},
            Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Rectangle Style="{DynamicResource TileRectStyle}" Grid.RowSpan="2"/>

            <TextBlock Text="Controls" Style="{DynamicResource TileHeaderStyle}"/>
            
            <StackPanel Orientation="Vertical"
                    x:Name="BottomControls" 
                   Grid.Row="2" Grid.ColumnSpan="2"
                    Margin="5,10,5,0"
                   VerticalAlignment="Top">


                <!--#region TEXTBOX_IP_ADDRESS_ENTRY-->

                <TextBlock Text="Enter IP Iddress" Margin="5,0,0,0"/>

                <TextBox x:Name="tbAddressOrIp"
                     Text="{Binding Ping.AddressOrIp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     IsEnabled="{Binding IsPingNotRunning, UpdateSourceTrigger=PropertyChanged}" 
                     Margin="5,5,5,5"
                     Style="{StaticResource placeHolder}" Tag="www.google.com"
                     FontWeight="Normal"
                     VerticalAlignment="Center"
                     FontSize="18" >
                    <TextBox.ToolTip>
                        <ToolTip Content="Enter an IP Address or Domain Name such as: 8.8.8.8 or google.com"/>
                    </TextBox.ToolTip>
                </TextBox>
                <!--#endregion-->

                <!--#region ENABLE LOGS -->

                <TextBlock Text="Enable logging to file" Margin="5,0,0,0"/>

                <ToggleButton Height="19.2" Width="55" 
                              Margin="5,5,0,5"
                              IsChecked="{Binding IsLoggingEnabled}" 
                              Style="{DynamicResource ToggleButtonStyle}"/>

                <!--#endregion-->



                <!--#region SLIDER -->

                <TextBlock Text="Change Intervals" Margin="5,0,0,2"/>

                <StackPanel Orientation="Horizontal" >
                    <Slider x:Name="slInterval" 
                            Value="{Binding Ping.IntervalBetweenPings}" 
                            VerticalAlignment="Center" 
                            Margin="5,5,5,5"
                            Minimum="1" SmallChange="0.5"  Cursor="Hand" 
                            IsSnapToTickEnabled="True" MinWidth="70">
                        <Slider.ToolTip>Select a interval between pings from 1 - 10 seconds.</Slider.ToolTip>
                    </Slider>
                    <Label x:Name="tbIntervalValue" 
                       Content="{Binding Value, ElementName=slInterval}" 
                       FontFamily="{StaticResource ButtonFont}"
                       FontWeight="Normal" 
                       Padding="0,0,0,0" 
                       VerticalAlignment="Center"/>
                    <Label FontWeight="Normal" 
                       VerticalAlignment="Center" 
                       Padding="0,0,0,0" 
                       FontFamily="{StaticResource ButtonFont}"
                       Content="s"/>
                </StackPanel>

                <!--#endregion-->



                <!--#region BUTTON_START-->

                <Grid Margin="5,5,5,5" HorizontalAlignment="Center">

                    <ToggleButton x:Name="btnStartPing"
                                  IsChecked="{Binding IsPingRunning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{DynamicResource PingButtonStyle}"/>

                </Grid>

                <CheckBox Width="20" IsChecked="{Binding ShowControlConfiguration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                </CheckBox>

                <!--#endregion-->


            </StackPanel>



        </Grid>

        <!--#endregion-->

        <!--#region Sucess Rate GAUGE -->
        <Grid Grid.Row="0" Grid.Column="1" Margin="5,5,5,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>

            <Rectangle Style="{DynamicResource TileRectStyle}" Grid.RowSpan="2"/>

            <TextBlock Text="Success Rate" Style="{DynamicResource TileHeaderStyle}"/>

            <lvc:Gauge  
                    x:Name="GaugeTest"
                    Margin="0,0,0,10"
                    Uses360Mode="True"
                    HighFontSize="20"
                    Value="{Binding SuccessfulPingRate}"
                    VerticalAlignment="Stretch"
                    LabelFormatter="{Binding ToPercentageFormatter}"
                    HorizontalAlignment="Stretch"
                    Grid.Row="1" Grid.Column="1">
                <lvc:Gauge.GaugeActiveFill>
                    <LinearGradientBrush>
                        <GradientStop Color="#FF5EFF07" Offset="0.0" />
                        <GradientStop Color="#FF127337" Offset="1.0" />
                    </LinearGradientBrush>
                </lvc:Gauge.GaugeActiveFill>
            </lvc:Gauge>
        </Grid>
        <!--#endregion-->

        <!--#region Average Ms GAUGE -->
        <Grid Grid.Row="0" Grid.Column="2" Margin="5,5,5,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>

            <Rectangle Style="{DynamicResource TileRectStyle}" Grid.RowSpan="2"/>

            <TextBlock Text="Avg. Milliseconds" Style="{DynamicResource TileHeaderStyle}"/>

            <lvc:Gauge  
                    x:Name="GaugeAverageMs"
                    Margin="5,0,5,10"
                    From="0" 
                    To="{Binding Stats.MaxLatency}" 
                    Value="{Binding Stats.AverageLatency}"
                    HighFontSize="20"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Grid.Row="1" Grid.Column="1">
                <lvc:Gauge.GaugeActiveFill>
                    <LinearGradientBrush>
                        <GradientStop Color="#FFFF0B0B" Offset="0.0" />
                        <GradientStop Color="#FFC8291A" Offset="1.0" />
                    </LinearGradientBrush>
                </lvc:Gauge.GaugeActiveFill>
            </lvc:Gauge>
        </Grid>
        <!--#endregion-->

        <!--#region TAB Control-->
        <Grid Grid.Row="1" Grid.ColumnSpan="3" Margin="5,5,5,5">

            <Rectangle Style="{DynamicResource TileRectStyle}"/>

            <TabControl x:Name="GraphAndGrid" Margin="8,8,8,8" BorderThickness="0">
                <!--#region GRAPH LINE SERIES-->
                <TabItem Header="Graph" Style="{DynamicResource ChartTabItemStyle}" Margin="-2,-2,1.75,0">
                    <Grid>
                        <lvc:CartesianChart Zoom="X" x:Name="Chart" LegendLocation="Top" 
                                            DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                            <lvc:CartesianChart.Series>
                                <lvc:StackedAreaSeries Title="Success" Values="{Binding SuccessfulPing}">
                                </lvc:StackedAreaSeries>
                                <lvc:StackedAreaSeries Title="Fail"  Values="{Binding FailedPing}">
                                </lvc:StackedAreaSeries>
                            </lvc:CartesianChart.Series>
                        </lvc:CartesianChart>
                    </Grid>
                </TabItem>
                <TabItem Header="Grid" Style="{DynamicResource ChartTabItemStyle}"  Margin="-2,-2,1.75,0">
                    <Grid x:Name="dgGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!-- This grid fixes an issue where the datagrid will overexpand its width when contained with the tabitem-->
                        <DataGrid x:Name="dgPingResults"
                                  ItemsSource="{Binding PingResultsList}" 
                                  Background="Transparent"
                                  GridLinesVisibility="none" AutoGenerateColumns="false" 
                                  HorizontalContentAlignment="Center" HorizontalAlignment="Center" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding AddressOrIp}" Width="2*" IsReadOnly="True" Header="IP Address"  SortDirection="Ascending"/>
                                <DataGridTextColumn Binding="{Binding Latency}" Width="2*" IsReadOnly="True" Header="Latency"  SortDirection="Ascending"/>
                                <DataGridTextColumn Binding="{Binding Status}" Width="2*" IsReadOnly="True" Header="Result" SortDirection="Ascending"/>
                                <DataGridTextColumn Binding="{Binding TimeStamp}" Width="2*" IsReadOnly="True" Header="Timestamp" SortDirection="Ascending"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <!--#endregion-->

                <!--#region DATA GRID-->


                <!--#endregion-->

            </TabControl>
        </Grid>

        <!--#endregion-->



    </Grid>

</UserControl>
