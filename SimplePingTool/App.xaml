<Application x:Class="ITBox.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>
        
        <!--#region APP_COLORS-->
        <Brush x:Key="BackgroundGrey">#FAFAFA</Brush>
        <Brush x:Key="MenuBackgroundColor">#242444</Brush>
        <Brush x:Key="MenuTextColor">#52B7E9</Brush>
        <Brush x:Key="Color1">#46648C</Brush>
        <Brush x:Key="Color2">#146CA4</Brush>
        <Brush x:Key="Color3">#189DE4</Brush>
        <Brush x:Key="ControlBG_Blue1_1">#FF2195F2</Brush>
        <Color x:Key="ControlBG_Blue1">#FF2195F2</Color>
        <Color x:Key="ControlBG_Red1">#FFE53F33</Color>
        <Brush x:Key="ControlFG_White">AntiqueWhite</Brush>
        <Brush x:Key="ControlBG_Red1_1">#FFE53F33</Brush>
        
        <!--#endregion-->
        
        <FontFamily x:Key="ButtonFont">Yu Gothic UI Semilight</FontFamily>

        
        <!--#region Default Font Styles -->
        
        <Style TargetType="{x:Type UserControl}">
            <Setter Property="FontFamily" Value="Tw Cen MT" />
        </Style>

        <Style TargetType="{x:Type Window}">
            <Setter Property="FontFamily" Value="Tw Cen MT" />
        </Style>
        
        <!--#endregion-->

        <!--#region  Tab Item Styles-->

        <SolidColorBrush x:Key="TabItem.Static.Background" Color="White"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="{StaticResource ControlBG_Blue1}"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="{StaticResource ControlBG_Blue1}"/>
        <Style x:Key="ChartTabItemStyle" x:Name="ChartTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Padding" Value="10,4,10,4"/>
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0,5,10,5">
                            <Rectangle x:Name="mainBackground" Fill="{TemplateBinding Background}"  Style="{DynamicResource TileRectStyle}"/>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="mainBackground" 
                                        Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="Foreground" Value="{StaticResource ControlFG_White}"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="mainBackground" Value="{StaticResource TabItem.Selected.Background}"/>
                                <Setter Property="Foreground" Value="{StaticResource ControlFG_White}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        
        <!--#region PLACEHOLDER_CODE-->
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region  Tile Styles-->

        <Style x:Key="TileHeaderStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Opacity" Value="0.6"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="TileRectStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="RadiusX" Value="5"/>
            <Setter Property="RadiusY" Value="5"/>
            <Setter Property="Fill" Value="White"/>
            <Setter Property="StrokeThickness" Value="0.2"/>
            <Setter Property="Stroke" Value="#FF757171"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#FFD6CFCF" BlurRadius="2" ShadowDepth="2" Opacity="0.50"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--#endregion-->

        <!--#region Toggle Button -->
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid >
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False"/>
                            <Border x:Name="onBorder"
                                    CornerRadius="9" 
                                    Margin="0,0,20,0"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <TextBlock x:Name="onText" Text="ON" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <Border x:Name="offBorder" 
                                    CornerRadius="9"
                                    Margin="20,0,0,0"
                                    Panel.ZIndex="1"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <TextBlock x:Name="offText" Text="OFF" VerticalAlignment="Center"  HorizontalAlignment="Center"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="onBorder" Value="{StaticResource ResourceKey=ControlBG_Blue1_1}"/>
                                <Setter Property="Panel.ZIndex" TargetName="offBorder" Value="-1"/>
                                <Setter Property="Text" TargetName="offText" Value=""/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" TargetName="offBorder" Value="{StaticResource ResourceKey=ControlBG_Red1_1}"/>
                                <Setter Property="Text" TargetName="onText" Value=""/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->


    </Application.Resources>
</Application>
